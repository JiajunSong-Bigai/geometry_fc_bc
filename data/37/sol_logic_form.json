[{
        "line": 1,
        "action": [
            "AddLineFromPoint(Line(E,F),Point(E))",
            "Perpendicular(Line(E,F), Line(B, C))",
            "IntersectAt(Line(E,F),Line(B,C),Point(F))"
        ]
    },

    {
        "line": 2,
        "given": [
            "Perpendicular(Line(A,D), Line(B, C))"
        ]
    },

    {
        "line": 3,
        "imply": [
            "Parallel(Line(E,F), Line(A, D))"
        ]
    },

    {
        "line": 4,
        "given": [
            "IsMidpointOf(Point(E),Line(A, C))"
        ]
    },

    {
        "line": 5,
        "imply": [
            "IsMidpointOf(Point(F),Line(D,C))"
        ]
    },

    {
        "line": 6,
        "imply": [
            "Equals(LengthOf(Line(E,F)),HalfOf(LengthOf(Line(A,D))))"
        ]
    },

    {
        "line": 7,
        "given": [
            "Triangle(B,E,F)"
        ]
    },

    {
        "line": 8,
        "given": [
            "Equals(MeasureOf(Angle(B,F,E)),90)",
            "Equals(MeasureOf(Angle(E,B,F)),30)"
        ]
    },

    {
        "line": 9,
        "imply": [
            "Equals(LengthOf(Line(E,F)),HalfOf(LengthOf(Line(B,E))))"
        ]
    },

    {
        "line": 10,
        "imply": [
            "Equals(LengthOf(Line(A,D)),LengthOf(Line(B,E)))"
        ]
    }
]
