[{
        "line": 1,
        "action": [
            "IsMidpointOf(Point(N),Line(A, B))",
            "ConnectTwoPoints(Point(E),Point(N))"
        ]
    },

    {
        "line": 2,
        "given": [
            "Equilateral(Triangle(A,B,C))",
            "IsMidpointOf(Point(E),Line(B,C))"
        ]
    },

    {
        "line": 3,
        "imply": [
            "Equals(LengthOf(Line(A,B)),LengthOf(Line(B,C)))",
            "Perpendicular(Line(A, E), Line(B, C))",
            "BisectsAngle(Line(A,E),Angle(B,A,C))",
            "Equals(LengthOf(Line(E,C)),HalfOf(LengthOf(Line(B,C))))"
        ]
    },

    {
        "line": 4,
        "given": [
            "IsMidpointOf(Point(N),Line(A,B))"
        ]
    },

    {
        "line": 5,
        "imply": [
            "Equals(LengthOf(Line(A,N)),LengthOf(Line(N,E)),HalfOf(LengthOf(Line(A,B))),HalfOf(LengthOf(Line(B,C))),LengthOf(Line(E,C)))"
        ]
    },

    {
        "line": 6,
        "imply": [
            "Equals(MeasureOf(Angle(N,A,E)), MeasureOf(Angle(N,E,A)),30)"
        ]
    },

    {
        "line": 7,
        "imply": [
            "Equals(MeasureOf(Angle(A,N,E)), 120)"
        ]
    },

    {
        "line": 8,
        "given": [
            "Equals(MeasureOf(Angle(A,E,M)), 60)"
        ]
    },

    {
        "line": 9,
        "imply": [
            "Equals(MeasureOf(Angle(M,E,C)), 30)"
        ]
    },

    {
        "line": 10,
        "imply": [
            "Equals(MeasureOf(Angle(N,A,E)), MeasureOf(Angle(C,E,M)))"
        ]
    },

    {
        "line": 11,
        "given": [
            "BisectsAngle(Line(C,M),Angle(A,C,G))"
        ]
    },

    {
        "line": 12,
        "imply": [
            "Equals(MeasureOf(Angle(A,C,M)), 60)"
        ]
    },

    {
        "line": 13,
        "imply": [
            "Equals(MeasureOf(Angle(E,C,M)),120, MeasureOf(Angle(A,N,E)))"
        ]
    },

    {
        "line": 14,
        "given": [
            "Triangle(A,N,E)",
            "Triangle(E,C,M)",
            "Equals(MeasureOf(Angle(N,A,E)), MeasureOf(Angle(C,E,M)))",
            "Equals(LengthOf(Line(A,N)),LengthOf(Line(E,C)))",
            "Equals(MeasureOf(Angle(A,N,E)), MeasureOf(Angle(E,C,M)))"
        ]
    },

    {
        "line": 15,
        "imply": [
            "Congruent(Triangle(A,N,E), Triangle(E,C,M))"
        ]
    },

    {
        "line": 16,
        "imply": [
            "Equals(LengthOf(Line(A,E)),LengthOf(Line(E,M)))"
        ]
    }
]
